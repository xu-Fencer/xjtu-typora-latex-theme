@charset "UTF-8";
:root {
  /* == 字体设置 == */
  /* 基准字体 */
  /* 备选：Times, "Times New Roman" */
  --base-Latin-font: "Latin Modern Roman", "Latin Modern Roman 10", Times;
  --base-Chinese-font: "家族宋", "宋体-简", "华文宋体", "Noto Serif CJK SC";
  --base-font-size: 12pt;
  /* 引言字体 */
  --quote-font: "Latin Modern Roman", "Latin Modern Roman 10", Times,
    "Times New Roman", "华文仿宋";
  /* em单位为一个正文字符（--base-font-size）大小，
  例如，如果您设置 --base-font-size 为 9.5pt，那么 1.05em = 1.05*9.5pt ≈ 10pt。下面的标题字体等设置也遵循该规则。
  这样，您就可以仅通过调整基准字体大小，而动态对其他元素大小做出调整。
  当然，您也可以直接设置以pt或px为单位的数值，将元素的大小固定下来，如 --quote-font-size: 10pt; */
  --quote-font-size: 1.05em;
  /* 代码字体（代码中的中文会调用 ui-font） */
  /* "Courier New" 从 Windows 3.1 起成为 Windows 官方提供的字体 */
  /* "Consolas" 从 Windows Vista 起成为 Windows 官方提供的字体 */
  --code-font: "Latin Modern Mono", "Latin Modern Mono 10", "Consolas", "Courier New";
  /* 侧边栏字体 */
  --ui-font: "阿里巴巴普惠体 2.0", "微软雅黑";
  /* source mode 字体 */
  /* 默认调用 code-font 和 ui-font */
  --sourceMode-font: "SF Mono", "阿里巴巴普惠体 2.0", "微软雅黑";
  /* 目录字体 */
  /* 默认调用 base-font */
  --toc-font: "";
  /* 默认调用 base-font-size */
  --toc-font-size: "";
  /* 公式字体 */
  --math-font-size: 1em;
  /* 表格字体 */
  /* 默认调用 heading-font */
  --table-title-font: "";
  /* 默认调用 base-font */
  --table-font: "";
  /* 表格字体大小*/
  --table-font-size: 10.5pt;
  /* 标题字体（总设置） */
  --heading-Latin-font: var(--base-Latin-font);
  --heading-Chinese-font: var(--base-Chinese-font);
  /* 标题字体分别设置 */
  /* 大标题（h1）字体 */
  --title-Chinese-font: var(--base-Chinese-font);
  --title-font-size: 16pt;
  /* h2字体 */
  --h2-Chinese-font: var(--base-Chinese-font);
  --h2-font-size: 16pt;
  /* h3字体 */
  --h3-Chinese-font: var(--base-Chinese-font);
  --h3-font-size: 15pt;
  /* h4字体 */
  --h4-Chinese-font: var(--base-Chinese-font);
  --h4-font-size: 14pt;
  /* h5字体 */
  --h5-Chinese-font: var(--base-Chinese-font);
  --h5-font-size: 12pt;
  /* h6字体 */
  --h6-Chinese-font: var(--base-Chinese-font);
  --h6-font-size: 12pt;
  /* 粗体样式设置 */
  /* 加粗风格时使用的字重；400等同于 normal，700等同于 bold，900等同于 heavy */
  --strong-weight: 700;
  /* 基础行距 */
  --base-line-height: 150%;
  /* == 页面设置 == */
  /* 打印页边距 */
  --set-margin: 3cm 2.6cm 2.5cm 2.6cm !important;
  /* == 控制设置 == */
  /* 目录中是否显示一级标题 */
  --toc-show-title: none;
  /* == 颜色设置 == */
  /* 超链接颜色 */
  --link-color-light: #2E67D3;
  --link-color-dark: #8bb1f9;
  /* == 二级标题强制分页 == */
  /* 默认值为 auto */
  /* 更改为 page 启用强制分页 */
  --page-break-before-h2: page;
}

body {
  padding: 0 !important;
  margin: 0 !important;
  /* counter-reset: tableHead 0 imgHead 0; */
}

@media print {
  /* 显示打印专用的页眉页脚 */
  /* 页眉样式 */
  
  .print-header {
    /* display: block !important; 不好的使用方式 */
    width: 15.8;
    /* position: fixed !important; */
    /* top: 2cm; */
    /* text-align: center;
    line-height: 150%;
    border-bottom: 1px solid #000;
    padding-bottom: 5px; */
  }

  #write {
    padding: 0 !important;
  }
  h2 {
    break-before: var(--page-break-before-h2);
  }
  h2:first-of-type {
    break-before: avoid-page;
  }
  @page {
    margin: 3cm 2.6cm 2.5cm 2.6cm ; /* 页边距 */
    size: A4;
  }
}
#write {
  font-family: var(--base-Latin-font), var(--base-Chinese-font), serif;
  font-size: var(--base-font-size);
  /* A4标准宽度 */
  max-width: 21cm;
  background-color: white;
  /* column-count: 2;
    column-gap: 25px;
    column-width: 8cm; 
    display: inline-block; */
  /* 这里可以试分栏的，但确实不适合实现 */
}
#write .md-math-block,
#write .md-rawblock,
#write p{
  margin-top: 0;
  margin-bottom: 8pt;
}

.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p {margin-top: 0;}

#write p {
  text-align: left;
  line-height: var(--base-line-height);
}
#write a {
  color: var(--link-color-light);
}

hr {
  border-top: solid 1px #ddd;
  margin-top: 1.8em;
  margin-bottom: 1.8em;
}

img {
  /* 避免图片在导出时被断开 */
  break-inside: avoid-page;
  margin-bottom: 9pt;
}

strong {
  font-weight: var(--strong-weight);
}

@media screen {
  #write {
    padding: var(--set-margin);
    /* 添加一个淡蓝色的边框 */
    /* border: 0.8px solid #AAC ; */
    /* 页边阴影 */
    box-shadow: 0 0 24px 12px #cccccc;
  }
}
.MathJax {
  font-size: var(--math-font-size);
}

/* typora 编写模式 */
#typora-source {
  font-family: var(--sourceMode-font), var(--code-font), var(--ui-font), monospace;
  line-height: 2em;
}

/* 侧边大纲标题 */
.sidebar-content {
  counter-reset: outline-h1 outline-h2 outline-h3 outline-h4 outline-h5 outline-h6;
}
.sidebar-content .outline-h1 {
  counter-reset: outline-h2 outline-h3 outline-h4 outline-h5 outline-h6;
}
.sidebar-content .outline-h2 {
  counter-reset: outline-h3 outline-h4 outline-h5 outline-h6;
}
.sidebar-content .outline-h2 .outline-label:before {
  counter-increment: outline-h2;
  content: counter(outline-h2) " ";
}
.sidebar-content .outline-h3 {
  counter-reset: outline-h4 outline-h5 outline-h6;
}
.sidebar-content .outline-h3 .outline-label:before {
  counter-increment: outline-h3;
  content: counter(outline-h2) "." counter(outline-h3) "  ";
}
.sidebar-content .outline-h4 {
  counter-reset: outline-h5 outline-h6;
}
.sidebar-content .outline-h4 .outline-label:before {
  counter-increment: outline-h4;
  content: counter(outline-h2) "." counter(outline-h3) "." counter(outline-h4) "  ";
}
.sidebar-content .outline-h5 {
  counter-reset: outline-h6;
}
.sidebar-content .outline-h5 .outline-label:before {
  counter-increment: outline-h5;
  content: counter(outline-h2) "." counter(outline-h3) "." counter(outline-h4) "." counter(outline-h5) "  ";
}

.sidebar-content {
  /* 侧边栏的字体修改 */
  font-family: var(--ui-font);
  list-style: none;
}

/* 元数据（如 YAML front matter）的背景框 */
pre.md-meta-block {
  background: #cccccc;
  padding: 1.4em;
  font-family: var(--code-font), var(--ui-font), monospace;
  font-size: 0.8em;
}

#write > h3.md-focus:before,
#write > h4.md-focus:before,
#write > h5.md-focus:before,
#write > h6.md-focus:before,
h3.md-focus:before,
h4.md-focus:before,
h5.md-focus:before,
h6.md-focus:before {
  color: inherit;
  border: inherit;
  border-radius: inherit;
  position: inherit;
  left: initial;
  float: none;
  top: initial;
  font-size: inherit;
  padding-left: inherit;
  padding-right: inherit;
  vertical-align: inherit;
  font-weight: inherit;
  line-height: inherit;
}

#write {
  counter-reset: heading-h1 heading-h2 heading-h3 heading-h4 heading-h5 heading-h6;
}
#write h1,
#write h2,
#write h3,
#write h4,
#write h5,
#write h6 {
  font-weight: normal;/* 不加粗 */ 
  break-after: avoid-page !important;
}
#write h1 {
  font-family: var(--heading-Latin-font), var(--title-Chinese-font), serif;
  text-align: center;
  column-span: all;
  font-size: var(--title-font-size);
}
#write h2 {
  font-family: var(--heading-Latin-font), var(--h2-Chinese-font), serif;
  text-align: center;
  font-size: var(--h2-font-size);
  line-height: 1.5;
  margin-top: 8pt;
  margin-bottom: 16pt;
}
#write h3 {
  font-family: var(--heading-Latin-font), var(--h3-Chinese-font), serif;
  font-size: var(--h3-font-size);
  line-height: 1.5;
  margin-top: 15pt;
  margin-bottom: 7.5pt;
}
#write h4 {
  font-family: var(--heading-Latin-font), var(--h4-Chinese-font), serif;
  font-size: var(--h4-font-size);
  line-height: 1.5;
  margin-top: 7pt;
  margin-bottom: 8pt;
}
#write h5 {
  font-family: var(--heading-Latin-font), var(--h5-Chinese-font), serif;
  font-size: var(--h5-font-size);
  line-height: 1.5;
  margin-left: 2em;
  margin-top: 0;
  margin-bottom: 8pt;
}
#write h6 {
  font-family: var(--heading-Latin-font), var(--h6-Chinese-font), serif;
  font-size: var(--h6-font-size);
  line-height: 1.5;
  margin-top: 0;
  margin-bottom: 8pt;
  margin-left: 2em;
}
#write h1 {
  counter-set: heading-h2 0 heading-h3 0 heading-h4 0 heading-h5 0;
}
#write h2 {
  counter-set: heading-h3 0 heading-h4 0 heading-h5 0;
}
#write h3 {
  counter-set: heading-h4 0 heading-h5 0;
}
#write h4 {
  counter-set: heading-h5 0;
}

/*记得改编号*/
#write h1:before, h1.md-focus.md-heading:before {
  /* content: counter(heading-h1);
  counter-increment: heading-h1; */
  margin-right: 0.5em;
}

#write h2:before, h2.md-focus.md-heading:before {
  content: counter(heading-h2);
  counter-increment: heading-h2;
  margin-right: 1em;
}

#write h3:before, h3.md-focus.md-heading:before {
  content: counter(heading-h2) "." counter(heading-h3);
  counter-increment: heading-h3;
  margin-right: 0.5em;
}

#write h4:before, h4.md-focus.md-heading:before {
  content: counter(heading-h2) "." counter(heading-h3) "." counter(heading-h4);
  counter-increment: heading-h4;
  margin-left: 2em;
  margin-right: 0.5em;
}

#write h5:before, h5.md-focus.md-heading:before {
  content: counter(heading-h5)"）";
  counter-increment: heading-h5;
  
  /* margin-right: 0.5em; */
}

#write h6:before, h6.md-focus.md-heading:before {
  /* content: counter(heading-h2) "." counter(heading-h3) "." counter(heading-h4) "." counter(heading-h5) "." counter(heading-h6);
  counter-increment: heading-h6; */

  margin-right: 0.5em;/* 这个没用但是样式表不能为空而且不想删 */
}

/* 角标行高设为0防止角标与文本行高不一致  */
sup {
  line-height: 0;
}

/* 参考文献（脚注）块，在 Typora 中的样式 */
.md-def-footnote {
  display: flex;
  position: relative;
  font-size: 0.95em;
  opacity: 1;
  margin: 0;
}
.md-def-footnote:not(:first-child), .md-def-footnote + *:not(.md-def-footnote) {
  margin-top: 1em;
}
.md-def-footnote + .md-def-footnote {
  margin-top: 0.5em;
}
.md-def-footnote .md-def-name {
  font-weight: inherit;
  padding: 0;
  flex-shrink: 0;
  width: 3em;
  margin-inline-start: -1ch;
  white-space: nowrap;
  text-align: left;
}
.md-def-footnote .md-def-name:before {
  content: "［";
  position: static;
  color: inherit;
}
.md-def-footnote .md-def-name:after {
  content: "］";
  position: static;
  color: inherit;
}
.md-def-footnote .md-reverse-footnote-area {
  display: none;
}
.md-def-footnote:hover .md-reverse-footnote-area {
  position: absolute;
  right: -6px;
  display: inline;
}

/* 参考文献（脚注）块，在导出 HTML 或 PDF 时的样式（导出后的 HTML tag 和 Typora 中的 HTML tag 不一致） */
.footnotes-area {
  padding-inline-start: 2.5em;
}
.footnotes-area hr {
  display: none;
}
.footnotes-area .footnote-line {
  color: var(--text-color);
  font-size: 10.5pt;
  margin-top: 0;
  margin-bottom: 8pt;
  line-height: 150%;
}

.footnotes-area .footnote-line *:not(.md-fn-count) {
  display: inline-block;
  vertical-align: top;
}
.footnotes-area .footnote-line span.md-fn-count {
  font-weight: inherit;
  padding: 0;
  margin-inline-start: -3em;
  white-space: nowrap;
  display: inline-block;
  width: 2.5em;
}
.footnotes-area .footnote-line span.md-fn-count:before {
  content: "［";
  position: static;
  color: inherit;
}
.footnotes-area .footnote-line span.md-fn-count:after {
  content: "］";
  position: static;
  color: inherit;
}
.footnotes-area .footnote-line a.reversefootnote {
  display: none;
}

/* 参考文献（脚注）上标 */
sup.md-footnote {
  display: inline;
  padding: 0;
  margin: 0;
  background: transparent;
  color: inherit;
}
sup.md-footnote a {
  color: inherit !important;
}
sup.md-footnote:not(.md-expand) {
  margin-inline: -0.44em;
}
sup.md-footnote:not(.md-expand):before {
  content: "［";
}
sup.md-footnote:not(.md-expand):after {
  content: "］";
}

/* 无序列表 */
#write ul {
  list-style: disc;
}
#write ul ul {
  /*list-style: circle;*/
  /* 请勿删除“–”后的空格, 他们对缩进有一定影响, 下同 */
  list-style: "–   ";
}
#write ul ul ul {
  list-style: "◦  ";
}

/* 有序列表 */
#write ol {
  list-style: decimal;
}
#write ol ol {
  counter-reset: liist;
  list-style: none;
}
#write ol ol > li {
  counter-increment: liist;
  position: relative;
}
#write ol ol > li::before {
  content: "(" counter(liist, lower-alpha) ")";
  position: absolute;
  left: -1.8em;
}
#write ol ol ol {
  counter-reset: liiist;
  list-style: none;
  margin: 0;
}
#write ol ol ol > li {
  counter-increment: liiist;
  position: relative;
}
#write ol ol ol > li::before {
  content: counter(liiist, lower-roman) ".";
  align-self: flex-end;
  position: absolute;
  left: -4.5em;
  /* -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;*/
  /* 为了让项目编号时重新用句点对齐而不是左对齐 */
  width: 4em;
  text-align: right;
}

#write ol,
#write ul {
  padding-inline-start: 2em;
}

#write li {
  position: relative;
}
#write li + li,
#write ul + ol > li,
#write ol + ul > li,
#write li > ul > li,
#write li > ol > li {
  margin-top: -0.8em;
}

/* task列表 */
.md-task-list-item > input {
  margin-top: 0.42em;
  margin-left: -1.5em;
  width: 1em !important;
  height: 1em !important;
}

#write table {
  /* 三线表第一条线宽度 */
  border-top: 1.5pt solid;
  /* 三线表第二条线宽度 */
  border-bottom: 1.5pt solid;
  font-family: var(--table-font), var(--base-Latin-font), var(--base-Chinese-font), serif;
  font-size: var(--table-font-size); 
  text-align: center;
  break-inside: avoid-page;
  border-spacing: 6px;
  /* 自动布局表格宽度，如果有时内容太紧建议直接加空格吧，我自己看不惯和页面等宽的大表格 */
  width: 100%;
  /* 使表格默认居中；虽然这个代码不好，但好像没别的实现办法 */
  margin: 0 auto;
  margin-bottom: 9pt;
}
#write table td {
  padding: 2px;
}
#write table tr {
  padding: 2px;
}
#write th {
  padding: 0px 6px;
  font-weight: 400;/*首行不加粗 */
}
#write thead {
  /* 表格标题（首行）样式 */
  /* 三线表表头的线 */
  border-bottom: 1pt solid;
  font-family: var(--table-title-font), var(--heading-Latin-font), var(--heading-Chinese-font), serif !important;
  /* font-size: var(--base-font-size); */
  /*font-weight: 400;*/ /* 在这实现首行不加粗不行 */
}

/* 一个>的引言仅为两字符缩进，使用>>的引言为传统引言样式，具有左竖线、左缩进 */
blockquote {
  font-style: normal;
  font-family: var(--quote-font), var(--base-Latin-font), var(--base-Chinese-font), -apple-system, serif;
  font-size: var(--quote-font-size);
  /* 文字离左边框的距离 */
  padding-left: 2em;
  padding-right: 2em;
  /* 左边框离页面边的距离 */
  margin-left: 0;
}

blockquote blockquote {
  border-left: 4px solid hsl(0, 0%, 70%);
  padding-left: calc(2ch - 4px);
  padding-right: 0;
  margin-left: -4px;
  border-radius: 0;
}

/* 行内代码 */
code {
  font-family: var(--code-font), var(--ui-font), monospace;
}

h1 code, h2 code, h3 code, h4 code, h5 code, h6 code,
p code,
li code {
  color: rgb(60, 112, 198);
  background-color: #fefefe;
  /* 阴影 */
  box-shadow: 0 0 1px 1px #c8d3df;
  font-family: var(--code-font), var(--ui-font), monospace;
  box-sizing: border-box;
  border-right: 0px;
  margin: 0 2px 0 2px;
  padding: 0 2px 0 2px;
  /* 圆角 */
  border-radius: 2px 2px 2px 2px;
}

/* 代码块样式 */
.md-fences,
.CodeMirror pre,
.CodeMirror-wrap {
  /* padding: 10px; */
  font-size: 1em;
}
/* 使用主题 neat */
.cm-s-inner span.cm-comment { color: #a86; }
.cm-s-inner span.cm-keyword { line-height: 1em; font-weight: bold; color: blue; }
.cm-s-inner span.cm-string { color: #a22; }
.cm-s-inner span.cm-builtin { line-height: 1em; font-weight: bold; color: #077; }
.cm-s-inner span.cm-special { line-height: 1em; font-weight: bold; color: #0aa; }
.cm-s-inner span.cm-variable { color: black; }
.cm-s-inner span.cm-number, .cm-s-inner span.cm-atom { color: #3a3; }
.cm-s-inner span.cm-meta { color: #555; }
.cm-s-inner span.cm-link { color: #3a3; }

.cm-s-inner .CodeMirror-gutters { background: #FFF; border-right: 1px solid #000000; }
.cm-s-inner .CodeMirror-activeline-background { background: #ffffff; }
.cm-s-inner .CodeMirror-matchingbracket { outline:1px solid grey; color:black !important; }
.cm-s-inner .CodeMirror-linenumbers { color: #ffffff; }

.CodeMirror-code pre,
.CodeMirror-sizer {
  font-family: var(--code-font), var(--ui-font), monospace;
}

/* 目录 (但这个目录不符合正式要求）*/
.md-toc {
  font-size: var(--toc-font-size);
}

.md-toc-content {
  margin-left: 2em;
  /* 修复缺失上级标题时无法递增 */
  counter-reset: toc-h2 toc-h3 toc-h4 toc-h5 toc-h6;
  break-after: page;
}

.md-toc-inner {
  margin-left: 0 !important;
  color: var(--text-color) !important;
}

.md-toc-item {
  color: var(--text-color) !important;
}

/* 目录标题内容属性 */
.md-toc-h2,
.md-toc-h3,
.md-toc-h4,
.md-toc-h5,
.md-toc-h6 {
  font-size: var(--toc-font-size);
  font-family: var(--toc-font), var(--base-Latin-font), var(--base-Chinese-font), serif;
}


/* 目录标题前 */
.md-toc-content .md-toc-h1 {
  display: var(--toc-show-title);
  counter-set: toc-h2 0 toc-h3 0 toc-h4 0 ;
}
.md-toc-content .md-toc-h2 {
  counter-set: toc-h3 0 toc-h4 0 ;
}
.md-toc-content .md-toc-h3 {
  counter-set: toc-h4 0 ;
}

.md-toc-content .md-toc-h5 {
  /* 目录不包含级别过低的标题 */
  display: none;
  margin-left: 5.5em;
}
.md-toc-content .md-toc-h6 {
  /* 目录不包含级别过低的标题 */
  display: none;
  margin-left: 7.5em;
}
.md-toc-content .md-toc-h2:before {
  counter-increment: toc-h2;
  content: counter(toc-h2);
  margin-right: 1em;
  font-weight: var(--strong-weight);
}
.md-toc-content .md-toc-h3:before {
  counter-increment: toc-h3;
  content: counter(toc-h2) "." counter(toc-h3);
  margin-left: 1.5em;
  margin-right: 0.5em;
}
.md-toc-content .md-toc-h4:before {
  counter-increment: toc-h4;
  content: counter(toc-h2) "." counter(toc-h3) "." counter(toc-h4);
  margin-left: 3.5em;
  margin-right: 0.5em;
}

/* 以下是一些自定义标记 */

/* class="breakafter" 实现手动分页符 */
.breakafter {
  break-after: page;
}

/* class="caption" 实现图题注 */
.caption {
  text-align: center;
  font-size: 10.5pt;
}

/* 摘要样式 */
.abstract::before{
  content: "摘　要";
  text-align: center;
  font-size: 16pt;
}

.abstract-en::before {
  content: "ABSTRACT";
  text-align: center;
  font-size: 16pt;
}

.abstract,.abstract-en{
  break-before: page;
  text-align: center;
  margin-top: 32pt;
  margin-bottom: 16pt;
}

/* 关键词样式 */
.keywords::before {
  content: "关 键 词：";
  font-size: 12pt;
  font-weight: bold;
}

.keywords-en::before{
  content: "KEY WORDS：";
  font-size: 12pt;
  font-weight: bold;
}

.keywords,.keywords-en {
  /* font-weight: bold; */
  font-size: 12pt;
}

/* 引用样式 */
.reference::before {
  content: "参考文献";
  text-align: center;
  font-size: 16pt;
}

.reference {
  break-before: page;
}